/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.util.Arrays;
import java.util.HashMap;

public class Library {
    public static void main(String[] args) {
        System.out.println(Arrays.toString(roll(3)));

        int[] arr  ={10,29,37,4,85};

        int[][] weeklyMonthTemperatures = {
            {66, 64, 58, 65, 71, 57, 60},
            {57, 65, 65, 70, 72, 65, 51},
            {55, 54, 60, 53, 59, 57, 61},
            {65, 56, 55, 52, 55, 62, 57}
          };

        System.out.println(containsDuplicates(arr)); 
        System.out.println(calcAverage(arr));

        System.out.println(Arrays.toString(arrayOfArrays(weeklyMonthTemperatures)));

        
    }
    // public boolean someLibraryMethod() {
    //     return true;


// roll function 
    public static int[] roll(int n){
        int[] array = new int[n];

 

        for (int i = 0; i < n; i++) {
            double rand = (Math.random() * 6)+1;
               array[i]= (int) rand;
        }
        return array;
    }

// duplicates function 
     public static boolean containsDuplicates(int[] arr){
         boolean flag = false;
         for(int i=0; i< arr.length; i++){
             for(int j=i+1; j<arr.length; j++){
                 if(arr[i] == arr[j]){
                     flag =true;
                 }

             }


         }

         return flag; 


     }

// average calculations 
     public static double calcAverage(int[] arr){
         int sum =0; 
         for(int i =0; i <arr.length; i++){
             sum = sum + arr[i];
         }

         double average = sum/arr.length;
         return average; 

     }

     public static int[] arrayOfArrays (int [][] arr){
        HashMap<Integer, Double>lowestAve = new HashMap<>();
         for (int i = 0; i < arr.length; i++) {
            int sum =0;
             for (int j = 0; j < arr.length; j++) {
                sum = sum + arr[i][j];
     
             }
            double average = sum/arr[i].length; 
            lowestAve.put(i,average);
         }

         double avg = lowestAve.get(0);
         int k = 0;
         for(int x=1; x<lowestAve.size(); x++){
             if(avg > lowestAve.get(x)){
                 avg = lowestAve.get(x);
                 k = x;
             }
         }
         return arr[k];
        

     }
 


}
