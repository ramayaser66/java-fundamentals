/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;


import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        Path path = Paths.get("./linter/app/src/main/resources/gates.js");
         System.out.println(checkData(path));

    }
//    Don’t show an error if the line is empty.
//    Don’t show an error if the line ends with an opening curly brace {
//        Don’t show an error if the line ends with an closing curly brace }
//    Don’t show an error if the line contains if or else
//    "Line 3: Missing semicolon."

    public static String checkData(Path path) {

        String errorMassage = "";

        BufferedReader line = null;
        try {
            line = Files.newBufferedReader(path);
            String data = line.readLine();
            int NumberOfLine = 1;
            while (data != null) {
                if (!data.endsWith(";") && !data.isEmpty() &&
                        !data.endsWith("{") && !data.endsWith("}") && !data.contains("if") && !data.contains("else")) {
//                     System.out.println("Line "+NumberOfLine+": Missing semicolon.");

                    errorMassage = errorMassage + "Line" + NumberOfLine + ": Missing semicolon.\n";
                }
                NumberOfLine++;
                data = line.readLine();


            }

        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            if (line != null) {
                try {
                    line.close();
                } catch (IOException ex) {
                    System.out.println("error with closing the file");
                }
            }
        }
        return errorMassage;
    }

}



